#[macro_export]
macro_rules! install_layer {
    (@intercept( $layer:ty, $fn_intcpt:ident, $intcpt_inst:ident )
        $fn_id:ident ( $($arg_inp:expr),* )
    ) => (
        <$layer as $crate::QmpiLayer>::$fn_intcpt( & $intcpt_inst $(, $arg_inp)* )
    );

    (@get_level $index:ident, $func_index:expr, $v:ident) => (
        if $index >= 0 && $index < (*$v).total {
            ((**(*$v).items.add($index as usize)).table[$func_index as usize]).level
        }
        else { 0 }
    );

    (@exec_func( $layer:ty, $fn_intcpt:ident )
        $func_ptr:expr, $level:expr, $v:expr,
        $fn_id:ident [ $fn_idx:expr ] ( $( $arg_id:ident : $arg_tp:ty ),* ) -> $ret_tp:ty
    ) => {{
        let func_ptr: *mut ::std::os::raw::c_void = $func_ptr; //TODO: Type desc
        let level: ::std::os::raw::c_int = $level;
        let v: *mut $crate::qmpi_sys::vector = $v;

        let level=$crate::install_layer!(@get_level level, $fn_idx, v);

        let func_ptr:
            Option<
                extern "C"
                    fn ( $( $arg_tp ,)* ::std::os::raw::c_int, *mut $crate::qmpi_sys::vector )
                        -> $ret_tp
            >
             = ::std::mem::transmute(func_ptr);

        let mut intcpt_inst = <$layer as Default>::default();
        let func_ptr = func_ptr.expect("function pointer for execution is null, function can't be executed");
        let next_f = |$($arg_id),*| func_ptr( $( $arg_id ,)* level, v );
        let res = $crate::install_layer!(@intercept($layer, $fn_intcpt, intcpt_inst)
            $fn_id ( next_f $(, $arg_id)* )
        );
        res
    }};

    (@interception_function( $layer:ty )
        fn $fn_id:ident
            [ $fn_idx:expr, $fn_intcpt:ident ]
            ( $($arg_id:ident : $arg_tp:ty),* ) -> $ret_tp:ty $(;)?
    ) => (
        #[no_mangle]
        extern "C" fn $fn_id(
            $($arg_id : $arg_tp ,)*
            i: ::std::os::raw::c_int,
            v: *mut $crate::qmpi_sys::vector,
        ) -> $ret_tp {
            let mut f_dl: *mut ::std::os::raw::c_void = ::std::ptr::null_mut();
            unsafe {
                $crate::qmpi_sys::QMPI_Table_query(
                    $fn_idx,
                    &mut f_dl,
                    (*$crate::qmpi_sys::vector_get(v, i)).table.as_mut_ptr(),
                );
                $crate::install_layer!(@exec_func($layer, $fn_intcpt)
                    f_dl, i, v, $fn_id [ $fn_idx ] ( $($arg_id : $arg_tp),* ) -> $ret_tp
                )
            }
        }
    );
    (@interception_function( $layer:ty )
        $(
            fn $fn_id:ident
                [ $fn_idx:expr, $fn_intcpt:ident ]
                ( $($arg_id:ident : $arg_tp:ty),* ) -> $ret_tp:ty ;
        )*
    ) => (
        $(
            $crate::install_layer!(@interception_function($layer)
                fn $fn_id
                    [ $fn_idx, $fn_intcpt]
                    ( $($arg_id : $arg_tp),* ) -> $ret_tp
            );
        )*
    );

    ( $layer:ty ) => (
        $crate::install_layer! {@interception_function($layer)
            fn E_Abort[$crate::qmpi_sys::_MPI_funcs::_MPI_Abort, abort](comm: $crate::mpi_sys::MPI_Comm, errorcode: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Accumulate[$crate::qmpi_sys::_MPI_funcs::_MPI_Accumulate, accumulate](origin_addr: *const ::std::os::raw::c_void, origin_count: ::std::os::raw::c_int, origin_datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, target_count: ::std::os::raw::c_int, target_datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Add_error_class[$crate::qmpi_sys::_MPI_funcs::_MPI_Add_error_class, add_error_class](errorclass: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Add_error_code[$crate::qmpi_sys::_MPI_funcs::_MPI_Add_error_code, add_error_code](errorclass: ::std::os::raw::c_int, errorcode: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Add_error_string[$crate::qmpi_sys::_MPI_funcs::_MPI_Add_error_string, add_error_string](errorcode: ::std::os::raw::c_int, string: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Address[$crate::qmpi_sys::_MPI_funcs::_MPI_Address, address](location: *mut ::std::os::raw::c_void, address: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Allgather[$crate::qmpi_sys::_MPI_funcs::_MPI_Allgather, allgather](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Allgatherv[$crate::qmpi_sys::_MPI_funcs::_MPI_Allgatherv, allgatherv](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, displs: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Alloc_mem[$crate::qmpi_sys::_MPI_funcs::_MPI_Alloc_mem, alloc_mem](size: $crate::mpi_sys::MPI_Aint, info: $crate::mpi_sys::MPI_Info, baseptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Allreduce[$crate::qmpi_sys::_MPI_funcs::_MPI_Allreduce, allreduce](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Alltoall[$crate::qmpi_sys::_MPI_funcs::_MPI_Alltoall, alltoall](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Alltoallv[$crate::qmpi_sys::_MPI_funcs::_MPI_Alltoallv, alltoallv](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, sdispls: *const ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, rdispls: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Alltoallw[$crate::qmpi_sys::_MPI_funcs::_MPI_Alltoallw, alltoallw](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, sdispls: *const ::std::os::raw::c_int, sendtypes: *const $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, rdispls: *const ::std::os::raw::c_int, recvtypes: *const $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Attr_delete[$crate::qmpi_sys::_MPI_funcs::_MPI_Attr_delete, attr_delete](comm: $crate::mpi_sys::MPI_Comm, keyval: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Attr_get[$crate::qmpi_sys::_MPI_funcs::_MPI_Attr_get, attr_get](comm: $crate::mpi_sys::MPI_Comm, keyval: ::std::os::raw::c_int, attribute_val: *mut ::std::os::raw::c_void, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Attr_put[$crate::qmpi_sys::_MPI_funcs::_MPI_Attr_put, attr_put](comm: $crate::mpi_sys::MPI_Comm, keyval: ::std::os::raw::c_int, attribute_val: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Barrier[$crate::qmpi_sys::_MPI_funcs::_MPI_Barrier, barrier](comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Bcast[$crate::qmpi_sys::_MPI_funcs::_MPI_Bcast, bcast](buffer: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Bsend[$crate::qmpi_sys::_MPI_funcs::_MPI_Bsend, bsend](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Bsend_init[$crate::qmpi_sys::_MPI_funcs::_MPI_Bsend_init, bsend_init](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Buffer_attach[$crate::qmpi_sys::_MPI_funcs::_MPI_Buffer_attach, buffer_attach](buffer: *mut ::std::os::raw::c_void, size: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Buffer_detach[$crate::qmpi_sys::_MPI_funcs::_MPI_Buffer_detach, buffer_detach](buffer: *mut ::std::os::raw::c_void, size: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Cancel[$crate::qmpi_sys::_MPI_funcs::_MPI_Cancel, cancel](request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Cart_coords[$crate::qmpi_sys::_MPI_funcs::_MPI_Cart_coords, cart_coords](comm: $crate::mpi_sys::MPI_Comm, rank: ::std::os::raw::c_int, maxdims: ::std::os::raw::c_int, coords: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Cart_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Cart_create, cart_create](old_comm: $crate::mpi_sys::MPI_Comm, ndims: ::std::os::raw::c_int, dims: *const ::std::os::raw::c_int, periods: *const ::std::os::raw::c_int, reorder: ::std::os::raw::c_int, comm_cart: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Cart_get[$crate::qmpi_sys::_MPI_funcs::_MPI_Cart_get, cart_get](comm: $crate::mpi_sys::MPI_Comm, maxdims: ::std::os::raw::c_int, dims: *mut ::std::os::raw::c_int, periods: *mut ::std::os::raw::c_int, coords: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Cart_map[$crate::qmpi_sys::_MPI_funcs::_MPI_Cart_map, cart_map](comm: $crate::mpi_sys::MPI_Comm, ndims: ::std::os::raw::c_int, dims: *const ::std::os::raw::c_int, periods: *const ::std::os::raw::c_int, newrank: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Cart_rank[$crate::qmpi_sys::_MPI_funcs::_MPI_Cart_rank, cart_rank](comm: $crate::mpi_sys::MPI_Comm, coords: *const ::std::os::raw::c_int, rank: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Cart_shift[$crate::qmpi_sys::_MPI_funcs::_MPI_Cart_shift, cart_shift](comm: $crate::mpi_sys::MPI_Comm, direction: ::std::os::raw::c_int, disp: ::std::os::raw::c_int, rank_source: *mut ::std::os::raw::c_int, rank_dest: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Cart_sub[$crate::qmpi_sys::_MPI_funcs::_MPI_Cart_sub, cart_sub](comm: $crate::mpi_sys::MPI_Comm, remain_dims: *const ::std::os::raw::c_int, new_comm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Cartdim_get[$crate::qmpi_sys::_MPI_funcs::_MPI_Cartdim_get, cartdim_get](comm: $crate::mpi_sys::MPI_Comm, ndims: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Close_port[$crate::qmpi_sys::_MPI_funcs::_MPI_Close_port, close_port](port_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Comm_accept[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_accept, comm_accept](port_name: *const ::std::os::raw::c_char, info: $crate::mpi_sys::MPI_Info, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_call_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_call_errhandler, comm_call_errhandler](comm: $crate::mpi_sys::MPI_Comm, errorcode: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_compare[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_compare, comm_compare](comm1: $crate::mpi_sys::MPI_Comm, comm2: $crate::mpi_sys::MPI_Comm, result: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_connect[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_connect, comm_connect](port_name: *const ::std::os::raw::c_char, info: $crate::mpi_sys::MPI_Info, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_create, comm_create](comm: $crate::mpi_sys::MPI_Comm, group: $crate::mpi_sys::MPI_Group, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_create_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_create_errhandler, comm_create_errhandler](function: *mut $crate::mpi_sys::MPI_Comm_errhandler_function, errhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Comm_create_group[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_create_group, comm_create_group](comm: $crate::mpi_sys::MPI_Comm, group: $crate::mpi_sys::MPI_Group, tag: ::std::os::raw::c_int, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_create_keyval[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_create_keyval, comm_create_keyval](comm_copy_attr_fn: *mut $crate::mpi_sys::MPI_Comm_copy_attr_function, comm_delete_attr_fn: *mut $crate::mpi_sys::MPI_Comm_delete_attr_function, comm_keyval: *mut ::std::os::raw::c_int, extra_state: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Comm_delete_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_delete_attr, comm_delete_attr](comm: $crate::mpi_sys::MPI_Comm, comm_keyval: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_disconnect[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_disconnect, comm_disconnect](comm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_dup[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_dup, comm_dup](comm: $crate::mpi_sys::MPI_Comm, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_dup_with_info[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_dup_with_info, comm_dup_with_info](comm: $crate::mpi_sys::MPI_Comm, info: $crate::mpi_sys::MPI_Info, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_free, comm_free](comm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_free_keyval[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_free_keyval, comm_free_keyval](comm_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_get_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_get_attr, comm_get_attr](comm: $crate::mpi_sys::MPI_Comm, comm_keyval: ::std::os::raw::c_int, attribute_val: *mut ::std::os::raw::c_void, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_get_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_get_errhandler, comm_get_errhandler](comm: $crate::mpi_sys::MPI_Comm, erhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Comm_get_info[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_get_info, comm_get_info](comm: $crate::mpi_sys::MPI_Comm, info_used: *mut $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_Comm_get_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_get_name, comm_get_name](comm: $crate::mpi_sys::MPI_Comm, comm_name: *mut ::std::os::raw::c_char, resultlen: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_get_parent[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_get_parent, comm_get_parent](parent: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_group[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_group, comm_group](comm: $crate::mpi_sys::MPI_Comm, group: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Comm_idup[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_idup, comm_idup](comm: $crate::mpi_sys::MPI_Comm, newcomm: *mut $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Comm_join[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_join, comm_join](fd: ::std::os::raw::c_int, intercomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_rank[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_rank, comm_rank](comm: $crate::mpi_sys::MPI_Comm, rank: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_remote_group[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_remote_group, comm_remote_group](comm: $crate::mpi_sys::MPI_Comm, group: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Comm_remote_size[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_remote_size, comm_remote_size](comm: $crate::mpi_sys::MPI_Comm, size: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_set_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_set_attr, comm_set_attr](comm: $crate::mpi_sys::MPI_Comm, comm_keyval: ::std::os::raw::c_int, attribute_val: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Comm_set_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_set_errhandler, comm_set_errhandler](comm: $crate::mpi_sys::MPI_Comm, errhandler: $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Comm_set_info[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_set_info, comm_set_info](comm: $crate::mpi_sys::MPI_Comm, info: $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_Comm_set_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_set_name, comm_set_name](comm: $crate::mpi_sys::MPI_Comm, comm_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Comm_size[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_size, comm_size](comm: $crate::mpi_sys::MPI_Comm, size: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Comm_split[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_split, comm_split](comm: $crate::mpi_sys::MPI_Comm, color: ::std::os::raw::c_int, key: ::std::os::raw::c_int, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_split_type[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_split_type, comm_split_type](comm: $crate::mpi_sys::MPI_Comm, split_type: ::std::os::raw::c_int, key: ::std::os::raw::c_int, info: $crate::mpi_sys::MPI_Info, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Comm_test_inter[$crate::qmpi_sys::_MPI_funcs::_MPI_Comm_test_inter, comm_test_inter](comm: $crate::mpi_sys::MPI_Comm, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Compare_and_swap[$crate::qmpi_sys::_MPI_funcs::_MPI_Compare_and_swap, compare_and_swap](origin_addr: *const ::std::os::raw::c_void, compare_addr: *const ::std::os::raw::c_void, result_addr: *mut ::std::os::raw::c_void, datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Dims_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Dims_create, dims_create](nnodes: ::std::os::raw::c_int, ndims: ::std::os::raw::c_int, dims: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Dist_graph_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Dist_graph_create, dist_graph_create](comm_old: $crate::mpi_sys::MPI_Comm, n: ::std::os::raw::c_int, nodes: *const ::std::os::raw::c_int, degrees: *const ::std::os::raw::c_int, targets: *const ::std::os::raw::c_int, weights: *const ::std::os::raw::c_int, info: $crate::mpi_sys::MPI_Info, reorder: ::std::os::raw::c_int, newcomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Dist_graph_create_adjacent[$crate::qmpi_sys::_MPI_funcs::_MPI_Dist_graph_create_adjacent, dist_graph_create_adjacent](comm_old: $crate::mpi_sys::MPI_Comm, indegree: ::std::os::raw::c_int, sources: *const ::std::os::raw::c_int, sourceweights: *const ::std::os::raw::c_int, outdegree: ::std::os::raw::c_int, destinations: *const ::std::os::raw::c_int, destweights: *const ::std::os::raw::c_int, info: $crate::mpi_sys::MPI_Info, reorder: ::std::os::raw::c_int, comm_dist_graph: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Dist_graph_neighbors[$crate::qmpi_sys::_MPI_funcs::_MPI_Dist_graph_neighbors, dist_graph_neighbors](comm: $crate::mpi_sys::MPI_Comm, maxindegree: ::std::os::raw::c_int, sources: *mut ::std::os::raw::c_int, sourceweights: *mut ::std::os::raw::c_int, maxoutdegree: ::std::os::raw::c_int, destinations: *mut ::std::os::raw::c_int, destweights: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Dist_graph_neighbors_count[$crate::qmpi_sys::_MPI_funcs::_MPI_Dist_graph_neighbors_count, dist_graph_neighbors_count](comm: $crate::mpi_sys::MPI_Comm, inneighbors: *mut ::std::os::raw::c_int, outneighbors: *mut ::std::os::raw::c_int, weighted: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Errhandler_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Errhandler_create, errhandler_create](function: *mut $crate::mpi_sys::MPI_Handler_function, errhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Errhandler_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Errhandler_free, errhandler_free](errhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Errhandler_get[$crate::qmpi_sys::_MPI_funcs::_MPI_Errhandler_get, errhandler_get](comm: $crate::mpi_sys::MPI_Comm, errhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Errhandler_set[$crate::qmpi_sys::_MPI_funcs::_MPI_Errhandler_set, errhandler_set](comm: $crate::mpi_sys::MPI_Comm, errhandler: $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Error_class[$crate::qmpi_sys::_MPI_funcs::_MPI_Error_class, error_class](errorcode: ::std::os::raw::c_int, errorclass: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Error_string[$crate::qmpi_sys::_MPI_funcs::_MPI_Error_string, error_string](errorcode: ::std::os::raw::c_int, string: *mut ::std::os::raw::c_char, resultlen: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Exscan[$crate::qmpi_sys::_MPI_funcs::_MPI_Exscan, exscan](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Fetch_and_op[$crate::qmpi_sys::_MPI_funcs::_MPI_Fetch_and_op, fetch_and_op](origin_addr: *const ::std::os::raw::c_void, result_addr: *mut ::std::os::raw::c_void, datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, op: $crate::mpi_sys::MPI_Op, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_File_call_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_File_call_errhandler, file_call_errhandler](fh: $crate::mpi_sys::MPI_File, errorcode: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_File_close[$crate::qmpi_sys::_MPI_funcs::_MPI_File_close, file_close](fh: *mut $crate::mpi_sys::MPI_File) -> ::std::os::raw::c_int;
            fn E_File_create_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_File_create_errhandler, file_create_errhandler](function: *mut $crate::mpi_sys::MPI_File_errhandler_function, errhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_File_delete[$crate::qmpi_sys::_MPI_funcs::_MPI_File_delete, file_delete](filename: *const ::std::os::raw::c_char, info: $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_File_get_amode[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_amode, file_get_amode](fh: $crate::mpi_sys::MPI_File, amode: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_File_get_atomicity[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_atomicity, file_get_atomicity](fh: $crate::mpi_sys::MPI_File, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_File_get_byte_offset[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_byte_offset, file_get_byte_offset](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, disp: *mut $crate::mpi_sys::MPI_Offset) -> ::std::os::raw::c_int;
            fn E_File_get_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_errhandler, file_get_errhandler](file: $crate::mpi_sys::MPI_File, errhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_File_get_group[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_group, file_get_group](fh: $crate::mpi_sys::MPI_File, group: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_File_get_info[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_info, file_get_info](fh: $crate::mpi_sys::MPI_File, info_used: *mut $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_File_get_position[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_position, file_get_position](fh: $crate::mpi_sys::MPI_File, offset: *mut $crate::mpi_sys::MPI_Offset) -> ::std::os::raw::c_int;
            fn E_File_get_position_shared[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_position_shared, file_get_position_shared](fh: $crate::mpi_sys::MPI_File, offset: *mut $crate::mpi_sys::MPI_Offset) -> ::std::os::raw::c_int;
            fn E_File_get_size[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_size, file_get_size](fh: $crate::mpi_sys::MPI_File, size: *mut $crate::mpi_sys::MPI_Offset) -> ::std::os::raw::c_int;
            fn E_File_get_type_extent[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_type_extent, file_get_type_extent](fh: $crate::mpi_sys::MPI_File, datatype: $crate::mpi_sys::MPI_Datatype, extent: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_File_get_view[$crate::qmpi_sys::_MPI_funcs::_MPI_File_get_view, file_get_view](fh: $crate::mpi_sys::MPI_File, disp: *mut $crate::mpi_sys::MPI_Offset, etype: *mut $crate::mpi_sys::MPI_Datatype, filetype: *mut $crate::mpi_sys::MPI_Datatype, datarep: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_File_iread[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iread, file_iread](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iread_all[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iread_all, file_iread_all](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iread_at[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iread_at, file_iread_at](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iread_at_all[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iread_at_all, file_iread_at_all](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iread_shared[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iread_shared, file_iread_shared](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iwrite[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iwrite, file_iwrite](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iwrite_all[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iwrite_all, file_iwrite_all](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iwrite_at[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iwrite_at, file_iwrite_at](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iwrite_at_all[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iwrite_at_all, file_iwrite_at_all](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_iwrite_shared[$crate::qmpi_sys::_MPI_funcs::_MPI_File_iwrite_shared, file_iwrite_shared](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_File_open[$crate::qmpi_sys::_MPI_funcs::_MPI_File_open, file_open](comm: $crate::mpi_sys::MPI_Comm, filename: *const ::std::os::raw::c_char, amode: ::std::os::raw::c_int, info: $crate::mpi_sys::MPI_Info, fh: *mut $crate::mpi_sys::MPI_File) -> ::std::os::raw::c_int;
            fn E_File_preallocate[$crate::qmpi_sys::_MPI_funcs::_MPI_File_preallocate, file_preallocate](fh: $crate::mpi_sys::MPI_File, size: $crate::mpi_sys::MPI_Offset) -> ::std::os::raw::c_int;
            fn E_File_read[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read, file_read](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_read_all[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_all, file_read_all](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_read_all_begin[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_all_begin, file_read_all_begin](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_File_read_all_end[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_all_end, file_read_all_end](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_read_at[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_at, file_read_at](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_read_at_all[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_at_all, file_read_at_all](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_read_at_all_begin[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_at_all_begin, file_read_at_all_begin](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_File_read_at_all_end[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_at_all_end, file_read_at_all_end](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_read_ordered[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_ordered, file_read_ordered](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_read_ordered_begin[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_ordered_begin, file_read_ordered_begin](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_File_read_ordered_end[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_ordered_end, file_read_ordered_end](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_read_shared[$crate::qmpi_sys::_MPI_funcs::_MPI_File_read_shared, file_read_shared](fh: $crate::mpi_sys::MPI_File, buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_seek[$crate::qmpi_sys::_MPI_funcs::_MPI_File_seek, file_seek](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, whence: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_File_seek_shared[$crate::qmpi_sys::_MPI_funcs::_MPI_File_seek_shared, file_seek_shared](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, whence: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_File_set_atomicity[$crate::qmpi_sys::_MPI_funcs::_MPI_File_set_atomicity, file_set_atomicity](fh: $crate::mpi_sys::MPI_File, flag: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_File_set_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_File_set_errhandler, file_set_errhandler](file: $crate::mpi_sys::MPI_File, errhandler: $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_File_set_info[$crate::qmpi_sys::_MPI_funcs::_MPI_File_set_info, file_set_info](fh: $crate::mpi_sys::MPI_File, info: $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_File_set_size[$crate::qmpi_sys::_MPI_funcs::_MPI_File_set_size, file_set_size](fh: $crate::mpi_sys::MPI_File, size: $crate::mpi_sys::MPI_Offset) -> ::std::os::raw::c_int;
            fn E_File_set_view[$crate::qmpi_sys::_MPI_funcs::_MPI_File_set_view, file_set_view](fh: $crate::mpi_sys::MPI_File, disp: $crate::mpi_sys::MPI_Offset, etype: $crate::mpi_sys::MPI_Datatype, filetype: $crate::mpi_sys::MPI_Datatype, datarep: *const ::std::os::raw::c_char, info: $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_File_sync[$crate::qmpi_sys::_MPI_funcs::_MPI_File_sync, file_sync](fh: $crate::mpi_sys::MPI_File) -> ::std::os::raw::c_int;
            fn E_File_write[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write, file_write](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_write_all[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_all, file_write_all](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_write_all_begin[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_all_begin, file_write_all_begin](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_File_write_all_end[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_all_end, file_write_all_end](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_write_at[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_at, file_write_at](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_write_at_all[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_at_all, file_write_at_all](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_write_at_all_begin[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_at_all_begin, file_write_at_all_begin](fh: $crate::mpi_sys::MPI_File, offset: $crate::mpi_sys::MPI_Offset, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_File_write_at_all_end[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_at_all_end, file_write_at_all_end](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_write_ordered[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_ordered, file_write_ordered](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_write_ordered_begin[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_ordered_begin, file_write_ordered_begin](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_File_write_ordered_end[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_ordered_end, file_write_ordered_end](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_File_write_shared[$crate::qmpi_sys::_MPI_funcs::_MPI_File_write_shared, file_write_shared](fh: $crate::mpi_sys::MPI_File, buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Finalize[$crate::qmpi_sys::_MPI_funcs::_MPI_Finalize, finalize]() -> ::std::os::raw::c_int;
            fn E_Finalized[$crate::qmpi_sys::_MPI_funcs::_MPI_Finalized, finalized](flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Free_mem[$crate::qmpi_sys::_MPI_funcs::_MPI_Free_mem, free_mem](base: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Gather[$crate::qmpi_sys::_MPI_funcs::_MPI_Gather, gather](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Gatherv[$crate::qmpi_sys::_MPI_funcs::_MPI_Gatherv, gatherv](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, displs: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Get[$crate::qmpi_sys::_MPI_funcs::_MPI_Get, get](origin_addr: *mut ::std::os::raw::c_void, origin_count: ::std::os::raw::c_int, origin_datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, target_count: ::std::os::raw::c_int, target_datatype: $crate::mpi_sys::MPI_Datatype, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Get_accumulate[$crate::qmpi_sys::_MPI_funcs::_MPI_Get_accumulate, get_accumulate](origin_addr: *const ::std::os::raw::c_void, origin_count: ::std::os::raw::c_int, origin_datatype: $crate::mpi_sys::MPI_Datatype, result_addr: *mut ::std::os::raw::c_void, result_count: ::std::os::raw::c_int, result_datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, target_count: ::std::os::raw::c_int, target_datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Get_address[$crate::qmpi_sys::_MPI_funcs::_MPI_Get_address, get_address](location: *const ::std::os::raw::c_void, address: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Get_count[$crate::qmpi_sys::_MPI_funcs::_MPI_Get_count, get_count](status: *const $crate::mpi_sys::MPI_Status, datatype: $crate::mpi_sys::MPI_Datatype, count: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Get_elements[$crate::qmpi_sys::_MPI_funcs::_MPI_Get_elements, get_elements](status: *const $crate::mpi_sys::MPI_Status, datatype: $crate::mpi_sys::MPI_Datatype, count: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Get_elements_x[$crate::qmpi_sys::_MPI_funcs::_MPI_Get_elements_x, get_elements_x](status: *const $crate::mpi_sys::MPI_Status, datatype: $crate::mpi_sys::MPI_Datatype, count: *mut $crate::mpi_sys::MPI_Count) -> ::std::os::raw::c_int;
            fn E_Get_library_version[$crate::qmpi_sys::_MPI_funcs::_MPI_Get_library_version, get_library_version](version: *mut ::std::os::raw::c_char, resultlen: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Get_processor_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Get_processor_name, get_processor_name](name: *mut ::std::os::raw::c_char, resultlen: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Get_version[$crate::qmpi_sys::_MPI_funcs::_MPI_Get_version, get_version](version: *mut ::std::os::raw::c_int, subversion: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Graph_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Graph_create, graph_create](comm_old: $crate::mpi_sys::MPI_Comm, nnodes: ::std::os::raw::c_int, index: *const ::std::os::raw::c_int, edges: *const ::std::os::raw::c_int, reorder: ::std::os::raw::c_int, comm_graph: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Graph_get[$crate::qmpi_sys::_MPI_funcs::_MPI_Graph_get, graph_get](comm: $crate::mpi_sys::MPI_Comm, maxindex: ::std::os::raw::c_int, maxedges: ::std::os::raw::c_int, index: *mut ::std::os::raw::c_int, edges: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Graph_map[$crate::qmpi_sys::_MPI_funcs::_MPI_Graph_map, graph_map](comm: $crate::mpi_sys::MPI_Comm, nnodes: ::std::os::raw::c_int, index: *const ::std::os::raw::c_int, edges: *const ::std::os::raw::c_int, newrank: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Graph_neighbors[$crate::qmpi_sys::_MPI_funcs::_MPI_Graph_neighbors, graph_neighbors](comm: $crate::mpi_sys::MPI_Comm, rank: ::std::os::raw::c_int, maxneighbors: ::std::os::raw::c_int, neighbors: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Graph_neighbors_count[$crate::qmpi_sys::_MPI_funcs::_MPI_Graph_neighbors_count, graph_neighbors_count](comm: $crate::mpi_sys::MPI_Comm, rank: ::std::os::raw::c_int, nneighbors: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Graphdims_get[$crate::qmpi_sys::_MPI_funcs::_MPI_Graphdims_get, graphdims_get](comm: $crate::mpi_sys::MPI_Comm, nnodes: *mut ::std::os::raw::c_int, nedges: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Grequest_complete[$crate::qmpi_sys::_MPI_funcs::_MPI_Grequest_complete, grequest_complete](request: $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Grequest_start[$crate::qmpi_sys::_MPI_funcs::_MPI_Grequest_start, grequest_start](query_fn: *mut $crate::mpi_sys::MPI_Grequest_query_function, free_fn: *mut $crate::mpi_sys::MPI_Grequest_free_function, cancel_fn: *mut $crate::mpi_sys::MPI_Grequest_cancel_function, extra_state: *mut ::std::os::raw::c_void, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Group_compare[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_compare, group_compare](group1: $crate::mpi_sys::MPI_Group, group2: $crate::mpi_sys::MPI_Group, result: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Group_difference[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_difference, group_difference](group1: $crate::mpi_sys::MPI_Group, group2: $crate::mpi_sys::MPI_Group, newgroup: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Group_excl[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_excl, group_excl](group: $crate::mpi_sys::MPI_Group, n: ::std::os::raw::c_int, ranks: *const ::std::os::raw::c_int, newgroup: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Group_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_free, group_free](group: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Group_incl[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_incl, group_incl](group: $crate::mpi_sys::MPI_Group, n: ::std::os::raw::c_int, ranks: *const ::std::os::raw::c_int, newgroup: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Group_intersection[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_intersection, group_intersection](group1: $crate::mpi_sys::MPI_Group, group2: $crate::mpi_sys::MPI_Group, newgroup: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Group_range_excl[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_range_excl, group_range_excl](group: $crate::mpi_sys::MPI_Group, n: ::std::os::raw::c_int, ranges: *mut [::std::os::raw::c_int; 3], newgroup: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Group_range_incl[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_range_incl, group_range_incl](group: $crate::mpi_sys::MPI_Group, n: ::std::os::raw::c_int, ranges: *mut [::std::os::raw::c_int; 3], newgroup: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Group_rank[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_rank, group_rank](group: $crate::mpi_sys::MPI_Group, rank: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Group_size[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_size, group_size](group: $crate::mpi_sys::MPI_Group, size: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Group_translate_ranks[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_translate_ranks, group_translate_ranks](group1: $crate::mpi_sys::MPI_Group, n: ::std::os::raw::c_int, ranks1: *const ::std::os::raw::c_int, group2: $crate::mpi_sys::MPI_Group, ranks2: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Group_union[$crate::qmpi_sys::_MPI_funcs::_MPI_Group_union, group_union](group1: $crate::mpi_sys::MPI_Group, group2: $crate::mpi_sys::MPI_Group, newgroup: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Iallgather[$crate::qmpi_sys::_MPI_funcs::_MPI_Iallgather, iallgather](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Iallgatherv[$crate::qmpi_sys::_MPI_funcs::_MPI_Iallgatherv, iallgatherv](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, displs: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Iallreduce[$crate::qmpi_sys::_MPI_funcs::_MPI_Iallreduce, iallreduce](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ialltoall[$crate::qmpi_sys::_MPI_funcs::_MPI_Ialltoall, ialltoall](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ialltoallv[$crate::qmpi_sys::_MPI_funcs::_MPI_Ialltoallv, ialltoallv](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, sdispls: *const ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, rdispls: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ialltoallw[$crate::qmpi_sys::_MPI_funcs::_MPI_Ialltoallw, ialltoallw](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, sdispls: *const ::std::os::raw::c_int, sendtypes: *const $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, rdispls: *const ::std::os::raw::c_int, recvtypes: *const $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ibarrier[$crate::qmpi_sys::_MPI_funcs::_MPI_Ibarrier, ibarrier](comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ibcast[$crate::qmpi_sys::_MPI_funcs::_MPI_Ibcast, ibcast](buffer: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ibsend[$crate::qmpi_sys::_MPI_funcs::_MPI_Ibsend, ibsend](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Iexscan[$crate::qmpi_sys::_MPI_funcs::_MPI_Iexscan, iexscan](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Igather[$crate::qmpi_sys::_MPI_funcs::_MPI_Igather, igather](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Igatherv[$crate::qmpi_sys::_MPI_funcs::_MPI_Igatherv, igatherv](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, displs: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Improbe[$crate::qmpi_sys::_MPI_funcs::_MPI_Improbe, improbe](source: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, flag: *mut ::std::os::raw::c_int, message: *mut $crate::mpi_sys::MPI_Message, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Imrecv[$crate::qmpi_sys::_MPI_funcs::_MPI_Imrecv, imrecv](buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, r#type: $crate::mpi_sys::MPI_Datatype, message: *mut $crate::mpi_sys::MPI_Message, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ineighbor_allgather[$crate::qmpi_sys::_MPI_funcs::_MPI_Ineighbor_allgather, ineighbor_allgather](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ineighbor_allgatherv[$crate::qmpi_sys::_MPI_funcs::_MPI_Ineighbor_allgatherv, ineighbor_allgatherv](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, displs: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ineighbor_alltoall[$crate::qmpi_sys::_MPI_funcs::_MPI_Ineighbor_alltoall, ineighbor_alltoall](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ineighbor_alltoallv[$crate::qmpi_sys::_MPI_funcs::_MPI_Ineighbor_alltoallv, ineighbor_alltoallv](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, sdispls: *const ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, rdispls: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ineighbor_alltoallw[$crate::qmpi_sys::_MPI_funcs::_MPI_Ineighbor_alltoallw, ineighbor_alltoallw](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, sdispls: *const $crate::mpi_sys::MPI_Aint, sendtypes: *const $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, rdispls: *const $crate::mpi_sys::MPI_Aint, recvtypes: *const $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Info_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_create, info_create](info: *mut $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_Info_delete[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_delete, info_delete](info: $crate::mpi_sys::MPI_Info, key: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Info_dup[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_dup, info_dup](info: $crate::mpi_sys::MPI_Info, newinfo: *mut $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_Info_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_free, info_free](info: *mut $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_Info_get[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_get, info_get](info: $crate::mpi_sys::MPI_Info, key: *const ::std::os::raw::c_char, valuelen: ::std::os::raw::c_int, value: *mut ::std::os::raw::c_char, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Info_get_nkeys[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_get_nkeys, info_get_nkeys](info: $crate::mpi_sys::MPI_Info, nkeys: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Info_get_nthkey[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_get_nthkey, info_get_nthkey](info: $crate::mpi_sys::MPI_Info, n: ::std::os::raw::c_int, key: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Info_get_valuelen[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_get_valuelen, info_get_valuelen](info: $crate::mpi_sys::MPI_Info, key: *const ::std::os::raw::c_char, valuelen: *mut ::std::os::raw::c_int, flag: *mut ::std::os::raw::c_int, i: ::std::os::raw::c_int, v: *mut $crate::qmpi_sys::vector) -> ::std::os::raw::c_int;
            fn E_Info_set[$crate::qmpi_sys::_MPI_funcs::_MPI_Info_set, info_set](info: $crate::mpi_sys::MPI_Info, key: *const ::std::os::raw::c_char, value: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Init[$crate::qmpi_sys::_MPI_funcs::_MPI_Init, init](argc: *mut ::std::os::raw::c_int, argv: *mut *mut *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Init_thread[$crate::qmpi_sys::_MPI_funcs::_MPI_Init_thread, init_thread](argc: *mut ::std::os::raw::c_int, argv: *mut *mut *mut ::std::os::raw::c_char, required: ::std::os::raw::c_int, provided: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Initialized[$crate::qmpi_sys::_MPI_funcs::_MPI_Initialized, initialized](flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Intercomm_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Intercomm_create, intercomm_create](local_comm: $crate::mpi_sys::MPI_Comm, local_leader: ::std::os::raw::c_int, bridge_comm: $crate::mpi_sys::MPI_Comm, remote_leader: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, newintercomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Intercomm_merge[$crate::qmpi_sys::_MPI_funcs::_MPI_Intercomm_merge, intercomm_merge](intercomm: $crate::mpi_sys::MPI_Comm, high: ::std::os::raw::c_int, newintercomm: *mut $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Iprobe[$crate::qmpi_sys::_MPI_funcs::_MPI_Iprobe, iprobe](source: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, flag: *mut ::std::os::raw::c_int, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Irecv[$crate::qmpi_sys::_MPI_funcs::_MPI_Irecv, irecv](buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, source: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ireduce[$crate::qmpi_sys::_MPI_funcs::_MPI_Ireduce, ireduce](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ireduce_scatter[$crate::qmpi_sys::_MPI_funcs::_MPI_Ireduce_scatter, ireduce_scatter](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Ireduce_scatter_block[$crate::qmpi_sys::_MPI_funcs::_MPI_Ireduce_scatter_block, ireduce_scatter_block](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Irsend[$crate::qmpi_sys::_MPI_funcs::_MPI_Irsend, irsend](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Is_thread_main[$crate::qmpi_sys::_MPI_funcs::_MPI_Is_thread_main, is_thread_main](flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Iscan[$crate::qmpi_sys::_MPI_funcs::_MPI_Iscan, iscan](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Iscatter[$crate::qmpi_sys::_MPI_funcs::_MPI_Iscatter, iscatter](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Iscatterv[$crate::qmpi_sys::_MPI_funcs::_MPI_Iscatterv, iscatterv](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, displs: *const ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Isend[$crate::qmpi_sys::_MPI_funcs::_MPI_Isend, isend](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Issend[$crate::qmpi_sys::_MPI_funcs::_MPI_Issend, issend](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Keyval_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Keyval_create, keyval_create](copy_fn: *mut $crate::mpi_sys::MPI_Copy_function, delete_fn: *mut $crate::mpi_sys::MPI_Delete_function, keyval: *mut ::std::os::raw::c_int, extra_state: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Keyval_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Keyval_free, keyval_free](keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Lookup_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Lookup_name, lookup_name](service_name: *const ::std::os::raw::c_char, info: $crate::mpi_sys::MPI_Info, port_name: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Mprobe[$crate::qmpi_sys::_MPI_funcs::_MPI_Mprobe, mprobe](source: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, message: *mut $crate::mpi_sys::MPI_Message, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Mrecv[$crate::qmpi_sys::_MPI_funcs::_MPI_Mrecv, mrecv](buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, r#type: $crate::mpi_sys::MPI_Datatype, message: *mut $crate::mpi_sys::MPI_Message, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Neighbor_allgather[$crate::qmpi_sys::_MPI_funcs::_MPI_Neighbor_allgather, neighbor_allgather](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Neighbor_allgatherv[$crate::qmpi_sys::_MPI_funcs::_MPI_Neighbor_allgatherv, neighbor_allgatherv](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, displs: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Neighbor_alltoall[$crate::qmpi_sys::_MPI_funcs::_MPI_Neighbor_alltoall, neighbor_alltoall](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Neighbor_alltoallv[$crate::qmpi_sys::_MPI_funcs::_MPI_Neighbor_alltoallv, neighbor_alltoallv](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, sdispls: *const ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, rdispls: *const ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Neighbor_alltoallw[$crate::qmpi_sys::_MPI_funcs::_MPI_Neighbor_alltoallw, neighbor_alltoallw](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, sdispls: *const $crate::mpi_sys::MPI_Aint, sendtypes: *const $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, rdispls: *const $crate::mpi_sys::MPI_Aint, recvtypes: *const $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Op_commutative[$crate::qmpi_sys::_MPI_funcs::_MPI_Op_commutative, op_commutative](op: $crate::mpi_sys::MPI_Op, commute: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Op_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Op_create, op_create](function: *mut $crate::mpi_sys::MPI_User_function, commute: ::std::os::raw::c_int, op: *mut $crate::mpi_sys::MPI_Op) -> ::std::os::raw::c_int;
            fn E_Op_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Op_free, op_free](op: *mut $crate::mpi_sys::MPI_Op) -> ::std::os::raw::c_int;
            fn E_Open_port[$crate::qmpi_sys::_MPI_funcs::_MPI_Open_port, open_port](info: $crate::mpi_sys::MPI_Info, port_name: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Pack[$crate::qmpi_sys::_MPI_funcs::_MPI_Pack, pack](inbuf: *const ::std::os::raw::c_void, incount: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, outbuf: *mut ::std::os::raw::c_void, outsize: ::std::os::raw::c_int, position: *mut ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Pack_external[$crate::qmpi_sys::_MPI_funcs::_MPI_Pack_external, pack_external](datarep: *const ::std::os::raw::c_char, inbuf: *const ::std::os::raw::c_void, incount: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, outbuf: *mut ::std::os::raw::c_void, outsize: $crate::mpi_sys::MPI_Aint, position: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Pack_external_size[$crate::qmpi_sys::_MPI_funcs::_MPI_Pack_external_size, pack_external_size](datarep: *const ::std::os::raw::c_char, incount: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, size: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Pack_size[$crate::qmpi_sys::_MPI_funcs::_MPI_Pack_size, pack_size](incount: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm, size: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Pcontrol[$crate::qmpi_sys::_MPI_funcs::_MPI_Pcontrol, pcontrol](level: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Probe[$crate::qmpi_sys::_MPI_funcs::_MPI_Probe, probe](source: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Publish_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Publish_name, publish_name](service_name: *const ::std::os::raw::c_char, info: $crate::mpi_sys::MPI_Info, port_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Put[$crate::qmpi_sys::_MPI_funcs::_MPI_Put, put](origin_addr: *const ::std::os::raw::c_void, origin_count: ::std::os::raw::c_int, origin_datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, target_count: ::std::os::raw::c_int, target_datatype: $crate::mpi_sys::MPI_Datatype, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Query_thread[$crate::qmpi_sys::_MPI_funcs::_MPI_Query_thread, query_thread](provided: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Raccumulate[$crate::qmpi_sys::_MPI_funcs::_MPI_Raccumulate, raccumulate](origin_addr: *const ::std::os::raw::c_void, origin_count: ::std::os::raw::c_int, origin_datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, target_count: ::std::os::raw::c_int, target_datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, win: $crate::mpi_sys::MPI_Win, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Recv[$crate::qmpi_sys::_MPI_funcs::_MPI_Recv, recv](buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, source: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Recv_init[$crate::qmpi_sys::_MPI_funcs::_MPI_Recv_init, recv_init](buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, source: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Reduce[$crate::qmpi_sys::_MPI_funcs::_MPI_Reduce, reduce](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Reduce_local[$crate::qmpi_sys::_MPI_funcs::_MPI_Reduce_local, reduce_local](inbuf: *const ::std::os::raw::c_void, inoutbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op) -> ::std::os::raw::c_int;
            fn E_Reduce_scatter[$crate::qmpi_sys::_MPI_funcs::_MPI_Reduce_scatter, reduce_scatter](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, recvcounts: *const ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Reduce_scatter_block[$crate::qmpi_sys::_MPI_funcs::_MPI_Reduce_scatter_block, reduce_scatter_block](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Register_datarep[$crate::qmpi_sys::_MPI_funcs::_MPI_Register_datarep, register_datarep](datarep: *const ::std::os::raw::c_char, read_conversion_fn: *mut $crate::mpi_sys::MPI_Datarep_conversion_function, write_conversion_fn: *mut $crate::mpi_sys::MPI_Datarep_conversion_function, dtype_file_extent_fn: *mut $crate::mpi_sys::MPI_Datarep_extent_function, extra_state: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Request_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Request_free, request_free](request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Request_get_status[$crate::qmpi_sys::_MPI_funcs::_MPI_Request_get_status, request_get_status](request: $crate::mpi_sys::MPI_Request, flag: *mut ::std::os::raw::c_int, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Rget[$crate::qmpi_sys::_MPI_funcs::_MPI_Rget, rget](origin_addr: *mut ::std::os::raw::c_void, origin_count: ::std::os::raw::c_int, origin_datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, target_count: ::std::os::raw::c_int, target_datatype: $crate::mpi_sys::MPI_Datatype, win: $crate::mpi_sys::MPI_Win, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Rget_accumulate[$crate::qmpi_sys::_MPI_funcs::_MPI_Rget_accumulate, rget_accumulate](origin_addr: *const ::std::os::raw::c_void, origin_count: ::std::os::raw::c_int, origin_datatype: $crate::mpi_sys::MPI_Datatype, result_addr: *mut ::std::os::raw::c_void, result_count: ::std::os::raw::c_int, result_datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, target_count: ::std::os::raw::c_int, target_datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, win: $crate::mpi_sys::MPI_Win, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Rput[$crate::qmpi_sys::_MPI_funcs::_MPI_Rput, rput](origin_addr: *const ::std::os::raw::c_void, origin_count: ::std::os::raw::c_int, origin_datatype: $crate::mpi_sys::MPI_Datatype, target_rank: ::std::os::raw::c_int, target_disp: $crate::mpi_sys::MPI_Aint, target_cout: ::std::os::raw::c_int, target_datatype: $crate::mpi_sys::MPI_Datatype, win: $crate::mpi_sys::MPI_Win, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Rsend[$crate::qmpi_sys::_MPI_funcs::_MPI_Rsend, rsend](ibuf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Rsend_init[$crate::qmpi_sys::_MPI_funcs::_MPI_Rsend_init, rsend_init](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Scan[$crate::qmpi_sys::_MPI_funcs::_MPI_Scan, scan](sendbuf: *const ::std::os::raw::c_void, recvbuf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, op: $crate::mpi_sys::MPI_Op, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Scatter[$crate::qmpi_sys::_MPI_funcs::_MPI_Scatter, scatter](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Scatterv[$crate::qmpi_sys::_MPI_funcs::_MPI_Scatterv, scatterv](sendbuf: *const ::std::os::raw::c_void, sendcounts: *const ::std::os::raw::c_int, displs: *const ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, root: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Send[$crate::qmpi_sys::_MPI_funcs::_MPI_Send, send](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Send_init[$crate::qmpi_sys::_MPI_funcs::_MPI_Send_init, send_init](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Sendrecv[$crate::qmpi_sys::_MPI_funcs::_MPI_Sendrecv, sendrecv](sendbuf: *const ::std::os::raw::c_void, sendcount: ::std::os::raw::c_int, sendtype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, sendtag: ::std::os::raw::c_int, recvbuf: *mut ::std::os::raw::c_void, recvcount: ::std::os::raw::c_int, recvtype: $crate::mpi_sys::MPI_Datatype, source: ::std::os::raw::c_int, recvtag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Sendrecv_replace[$crate::qmpi_sys::_MPI_funcs::_MPI_Sendrecv_replace, sendrecv_replace](buf: *mut ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, sendtag: ::std::os::raw::c_int, source: ::std::os::raw::c_int, recvtag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Ssend[$crate::qmpi_sys::_MPI_funcs::_MPI_Ssend, ssend](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Ssend_init[$crate::qmpi_sys::_MPI_funcs::_MPI_Ssend_init, ssend_init](buf: *const ::std::os::raw::c_void, count: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, dest: ::std::os::raw::c_int, tag: ::std::os::raw::c_int, comm: $crate::mpi_sys::MPI_Comm, request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Start[$crate::qmpi_sys::_MPI_funcs::_MPI_Start, start](request: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Startall[$crate::qmpi_sys::_MPI_funcs::_MPI_Startall, startall](count: ::std::os::raw::c_int, array_of_requests: *mut $crate::mpi_sys::MPI_Request) -> ::std::os::raw::c_int;
            fn E_Status_set_cancelled[$crate::qmpi_sys::_MPI_funcs::_MPI_Status_set_cancelled, status_set_cancelled](status: *mut $crate::mpi_sys::MPI_Status, flag: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Status_set_elements[$crate::qmpi_sys::_MPI_funcs::_MPI_Status_set_elements, status_set_elements](status: *mut $crate::mpi_sys::MPI_Status, datatype: $crate::mpi_sys::MPI_Datatype, count: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Status_set_elements_x[$crate::qmpi_sys::_MPI_funcs::_MPI_Status_set_elements_x, status_set_elements_x](status: *mut $crate::mpi_sys::MPI_Status, datatype: $crate::mpi_sys::MPI_Datatype, count: $crate::mpi_sys::MPI_Count) -> ::std::os::raw::c_int;
            fn E_Test[$crate::qmpi_sys::_MPI_funcs::_MPI_Test, test](request: *mut $crate::mpi_sys::MPI_Request, flag: *mut ::std::os::raw::c_int, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Test_cancelled[$crate::qmpi_sys::_MPI_funcs::_MPI_Test_cancelled, test_cancelled](status: *const $crate::mpi_sys::MPI_Status, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Testall[$crate::qmpi_sys::_MPI_funcs::_MPI_Testall, testall](count: ::std::os::raw::c_int, array_of_requests: *mut $crate::mpi_sys::MPI_Request, flag: *mut ::std::os::raw::c_int, array_of_statuses: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Testany[$crate::qmpi_sys::_MPI_funcs::_MPI_Testany, testany](count: ::std::os::raw::c_int, array_of_requests: *mut $crate::mpi_sys::MPI_Request, index: *mut ::std::os::raw::c_int, flag: *mut ::std::os::raw::c_int, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Testsome[$crate::qmpi_sys::_MPI_funcs::_MPI_Testsome, testsome](incount: ::std::os::raw::c_int, array_of_requests: *mut $crate::mpi_sys::MPI_Request, outcount: *mut ::std::os::raw::c_int, array_of_indices: *mut ::std::os::raw::c_int, array_of_statuses: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Topo_test[$crate::qmpi_sys::_MPI_funcs::_MPI_Topo_test, topo_test](comm: $crate::mpi_sys::MPI_Comm, status: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Type_commit[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_commit, type_commit](r#type: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_contiguous[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_contiguous, type_contiguous](count: ::std::os::raw::c_int, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_darray[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_darray, type_create_darray](size: ::std::os::raw::c_int, rank: ::std::os::raw::c_int, ndims: ::std::os::raw::c_int, gsize_array: *const ::std::os::raw::c_int, distrib_array: *const ::std::os::raw::c_int, darg_array: *const ::std::os::raw::c_int, psize_array: *const ::std::os::raw::c_int, order: ::std::os::raw::c_int, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_f90_complex[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_f90_complex, type_create_f90_complex](p: ::std::os::raw::c_int, r: ::std::os::raw::c_int, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_f90_integer[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_f90_integer, type_create_f90_integer](r: ::std::os::raw::c_int, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_f90_real[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_f90_real, type_create_f90_real](p: ::std::os::raw::c_int, r: ::std::os::raw::c_int, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_hindexed[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_hindexed, type_create_hindexed](count: ::std::os::raw::c_int, array_of_blocklengths: *const ::std::os::raw::c_int, array_of_displacements: *const $crate::mpi_sys::MPI_Aint, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_hindexed_block[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_hindexed_block, type_create_hindexed_block](count: ::std::os::raw::c_int, blocklength: ::std::os::raw::c_int, array_of_displacements: *const $crate::mpi_sys::MPI_Aint, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_hvector[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_hvector, type_create_hvector](count: ::std::os::raw::c_int, blocklength: ::std::os::raw::c_int, stride: $crate::mpi_sys::MPI_Aint, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_indexed_block[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_indexed_block, type_create_indexed_block](count: ::std::os::raw::c_int, blocklength: ::std::os::raw::c_int, array_of_displacements: *const ::std::os::raw::c_int, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_keyval[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_keyval, type_create_keyval](type_copy_attr_fn: *mut $crate::mpi_sys::MPI_Type_copy_attr_function, type_delete_attr_fn: *mut $crate::mpi_sys::MPI_Type_delete_attr_function, type_keyval: *mut ::std::os::raw::c_int, extra_state: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Type_create_resized[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_resized, type_create_resized](oldtype: $crate::mpi_sys::MPI_Datatype, lb: $crate::mpi_sys::MPI_Aint, extent: $crate::mpi_sys::MPI_Aint, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_struct[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_struct, type_create_struct](count: ::std::os::raw::c_int, array_of_block_lengths: *const ::std::os::raw::c_int, array_of_displacements: *const $crate::mpi_sys::MPI_Aint, array_of_types: *const $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_create_subarray[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_create_subarray, type_create_subarray](ndims: ::std::os::raw::c_int, size_array: *const ::std::os::raw::c_int, subsize_array: *const ::std::os::raw::c_int, start_array: *const ::std::os::raw::c_int, order: ::std::os::raw::c_int, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_delete_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_delete_attr, type_delete_attr](r#type: $crate::mpi_sys::MPI_Datatype, type_keyval: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Type_dup[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_dup, type_dup](r#type: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_extent[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_extent, type_extent](r#type: $crate::mpi_sys::MPI_Datatype, extent: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Type_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_free, type_free](r#type: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_free_keyval[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_free_keyval, type_free_keyval](type_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Type_get_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_get_attr, type_get_attr](r#type: $crate::mpi_sys::MPI_Datatype, type_keyval: ::std::os::raw::c_int, attribute_val: *mut ::std::os::raw::c_void, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Type_get_contents[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_get_contents, type_get_contents](mtype: $crate::mpi_sys::MPI_Datatype, max_integers: ::std::os::raw::c_int, max_addresses: ::std::os::raw::c_int, max_datatypes: ::std::os::raw::c_int, array_of_integers: *mut ::std::os::raw::c_int, array_of_addresses: *mut $crate::mpi_sys::MPI_Aint, array_of_datatypes: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_get_envelope[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_get_envelope, type_get_envelope](r#type: $crate::mpi_sys::MPI_Datatype, num_integers: *mut ::std::os::raw::c_int, num_addresses: *mut ::std::os::raw::c_int, num_datatypes: *mut ::std::os::raw::c_int, combiner: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Type_get_extent[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_get_extent, type_get_extent](r#type: $crate::mpi_sys::MPI_Datatype, lb: *mut $crate::mpi_sys::MPI_Aint, extent: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Type_get_extent_x[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_get_extent_x, type_get_extent_x](r#type: $crate::mpi_sys::MPI_Datatype, lb: *mut $crate::mpi_sys::MPI_Count, extent: *mut $crate::mpi_sys::MPI_Count) -> ::std::os::raw::c_int;
            fn E_Type_get_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_get_name, type_get_name](r#type: $crate::mpi_sys::MPI_Datatype, type_name: *mut ::std::os::raw::c_char, resultlen: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Type_get_true_extent[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_get_true_extent, type_get_true_extent](datatype: $crate::mpi_sys::MPI_Datatype, true_lb: *mut $crate::mpi_sys::MPI_Aint, true_extent: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Type_get_true_extent_x[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_get_true_extent_x, type_get_true_extent_x](datatype: $crate::mpi_sys::MPI_Datatype, true_lb: *mut $crate::mpi_sys::MPI_Count, true_extent: *mut $crate::mpi_sys::MPI_Count) -> ::std::os::raw::c_int;
            fn E_Type_hindexed[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_hindexed, type_hindexed](count: ::std::os::raw::c_int, array_of_blocklengths: *mut ::std::os::raw::c_int, array_of_displacements: *mut $crate::mpi_sys::MPI_Aint, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_hvector[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_hvector, type_hvector](count: ::std::os::raw::c_int, blocklength: ::std::os::raw::c_int, stride: $crate::mpi_sys::MPI_Aint, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_indexed[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_indexed, type_indexed](count: ::std::os::raw::c_int, array_of_blocklengths: *const ::std::os::raw::c_int, array_of_displacements: *const ::std::os::raw::c_int, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_lb[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_lb, type_lb](r#type: $crate::mpi_sys::MPI_Datatype, lb: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Type_match_size[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_match_size, type_match_size](typeclass: ::std::os::raw::c_int, size: ::std::os::raw::c_int, r#type: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_set_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_set_attr, type_set_attr](r#type: $crate::mpi_sys::MPI_Datatype, type_keyval: ::std::os::raw::c_int, attr_val: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Type_set_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_set_name, type_set_name](r#type: $crate::mpi_sys::MPI_Datatype, type_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Type_size[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_size, type_size](r#type: $crate::mpi_sys::MPI_Datatype, size: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Type_size_x[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_size_x, type_size_x](r#type: $crate::mpi_sys::MPI_Datatype, size: *mut $crate::mpi_sys::MPI_Count) -> ::std::os::raw::c_int;
            fn E_Type_struct[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_struct, type_struct](count: ::std::os::raw::c_int, array_of_blocklengths: *mut ::std::os::raw::c_int, array_of_displacements: *mut $crate::mpi_sys::MPI_Aint, array_of_types: *mut $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Type_ub[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_ub, type_ub](mtype: $crate::mpi_sys::MPI_Datatype, ub: *mut $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Type_vector[$crate::qmpi_sys::_MPI_funcs::_MPI_Type_vector, type_vector](count: ::std::os::raw::c_int, blocklength: ::std::os::raw::c_int, stride: ::std::os::raw::c_int, oldtype: $crate::mpi_sys::MPI_Datatype, newtype: *mut $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Unpack[$crate::qmpi_sys::_MPI_funcs::_MPI_Unpack, unpack](inbuf: *const ::std::os::raw::c_void, insize: ::std::os::raw::c_int, position: *mut ::std::os::raw::c_int, outbuf: *mut ::std::os::raw::c_void, outcount: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype, comm: $crate::mpi_sys::MPI_Comm) -> ::std::os::raw::c_int;
            fn E_Unpack_external[$crate::qmpi_sys::_MPI_funcs::_MPI_Unpack_external, unpack_external](datarep: *const ::std::os::raw::c_char, inbuf: *const ::std::os::raw::c_void, insize: $crate::mpi_sys::MPI_Aint, position: *mut $crate::mpi_sys::MPI_Aint, outbuf: *mut ::std::os::raw::c_void, outcount: ::std::os::raw::c_int, datatype: $crate::mpi_sys::MPI_Datatype) -> ::std::os::raw::c_int;
            fn E_Unpublish_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Unpublish_name, unpublish_name](service_name: *const ::std::os::raw::c_char, info: $crate::mpi_sys::MPI_Info, port_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Wait[$crate::qmpi_sys::_MPI_funcs::_MPI_Wait, wait](request: *mut $crate::mpi_sys::MPI_Request, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Waitall[$crate::qmpi_sys::_MPI_funcs::_MPI_Waitall, waitall](count: ::std::os::raw::c_int, array_of_requests: *mut $crate::mpi_sys::MPI_Request, array_of_statuses: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Waitany[$crate::qmpi_sys::_MPI_funcs::_MPI_Waitany, waitany](count: ::std::os::raw::c_int, array_of_requests: *mut $crate::mpi_sys::MPI_Request, index: *mut ::std::os::raw::c_int, status: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Waitsome[$crate::qmpi_sys::_MPI_funcs::_MPI_Waitsome, waitsome](incount: ::std::os::raw::c_int, array_of_requests: *mut $crate::mpi_sys::MPI_Request, outcount: *mut ::std::os::raw::c_int, array_of_indices: *mut ::std::os::raw::c_int, array_of_statuses: *mut $crate::mpi_sys::MPI_Status) -> ::std::os::raw::c_int;
            fn E_Win_allocate[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_allocate, win_allocate](size: $crate::mpi_sys::MPI_Aint, disp_unit: ::std::os::raw::c_int, info: $crate::mpi_sys::MPI_Info, comm: $crate::mpi_sys::MPI_Comm, baseptr: *mut ::std::os::raw::c_void, win: *mut $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_allocate_shared[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_allocate_shared, win_allocate_shared](size: $crate::mpi_sys::MPI_Aint, disp_unit: ::std::os::raw::c_int, info: $crate::mpi_sys::MPI_Info, comm: $crate::mpi_sys::MPI_Comm, baseptr: *mut ::std::os::raw::c_void, win: *mut $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_attach[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_attach, win_attach](win: $crate::mpi_sys::MPI_Win, base: *mut ::std::os::raw::c_void, size: $crate::mpi_sys::MPI_Aint) -> ::std::os::raw::c_int;
            fn E_Win_call_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_call_errhandler, win_call_errhandler](win: $crate::mpi_sys::MPI_Win, errorcode: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Win_complete[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_complete, win_complete](win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_create[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_create, win_create](base: *mut ::std::os::raw::c_void, size: $crate::mpi_sys::MPI_Aint, disp_unit: ::std::os::raw::c_int, info: $crate::mpi_sys::MPI_Info, comm: $crate::mpi_sys::MPI_Comm, win: *mut $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_create_dynamic[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_create_dynamic, win_create_dynamic](info: $crate::mpi_sys::MPI_Info, comm: $crate::mpi_sys::MPI_Comm, win: *mut $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_create_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_create_errhandler, win_create_errhandler](function: *mut $crate::mpi_sys::MPI_Win_errhandler_function, errhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Win_create_keyval[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_create_keyval, win_create_keyval](win_copy_attr_fn: *mut $crate::mpi_sys::MPI_Win_copy_attr_function, win_delete_attr_fn: *mut $crate::mpi_sys::MPI_Win_delete_attr_function, win_keyval: *mut ::std::os::raw::c_int, extra_state: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Win_delete_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_delete_attr, win_delete_attr](win: $crate::mpi_sys::MPI_Win, win_keyval: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Win_detach[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_detach, win_detach](win: $crate::mpi_sys::MPI_Win, base: *const ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Win_fence[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_fence, win_fence](assert: ::std::os::raw::c_int, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_flush[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_flush, win_flush](rank: ::std::os::raw::c_int, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_flush_all[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_flush_all, win_flush_all](win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_flush_local[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_flush_local, win_flush_local](rank: ::std::os::raw::c_int, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_flush_local_all[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_flush_local_all, win_flush_local_all](win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_free[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_free, win_free](win: *mut $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_free_keyval[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_free_keyval, win_free_keyval](win_keyval: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Win_get_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_get_attr, win_get_attr](win: $crate::mpi_sys::MPI_Win, win_keyval: ::std::os::raw::c_int, attribute_val: *mut ::std::os::raw::c_void, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Win_get_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_get_errhandler, win_get_errhandler](win: $crate::mpi_sys::MPI_Win, errhandler: *mut $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Win_get_group[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_get_group, win_get_group](win: $crate::mpi_sys::MPI_Win, group: *mut $crate::mpi_sys::MPI_Group) -> ::std::os::raw::c_int;
            fn E_Win_get_info[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_get_info, win_get_info](win: $crate::mpi_sys::MPI_Win, info_used: *mut $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_Win_get_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_get_name, win_get_name](win: $crate::mpi_sys::MPI_Win, win_name: *mut ::std::os::raw::c_char, resultlen: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Win_lock[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_lock, win_lock](lock_type: ::std::os::raw::c_int, rank: ::std::os::raw::c_int, assert: ::std::os::raw::c_int, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_lock_all[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_lock_all, win_lock_all](assert: ::std::os::raw::c_int, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_post[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_post, win_post](group: $crate::mpi_sys::MPI_Group, assert: ::std::os::raw::c_int, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_set_attr[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_set_attr, win_set_attr](win: $crate::mpi_sys::MPI_Win, win_keyval: ::std::os::raw::c_int, attribute_val: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Win_set_errhandler[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_set_errhandler, win_set_errhandler](win: $crate::mpi_sys::MPI_Win, errhandler: $crate::mpi_sys::MPI_Errhandler) -> ::std::os::raw::c_int;
            fn E_Win_set_info[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_set_info, win_set_info](win: $crate::mpi_sys::MPI_Win, info: $crate::mpi_sys::MPI_Info) -> ::std::os::raw::c_int;
            fn E_Win_set_name[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_set_name, win_set_name](win: $crate::mpi_sys::MPI_Win, win_name: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
            fn E_Win_shared_query[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_shared_query, win_shared_query](win: $crate::mpi_sys::MPI_Win, rank: ::std::os::raw::c_int, size: *mut $crate::mpi_sys::MPI_Aint, disp_unit: *mut ::std::os::raw::c_int, baseptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
            fn E_Win_start[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_start, win_start](group: $crate::mpi_sys::MPI_Group, assert: ::std::os::raw::c_int, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_sync[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_sync, win_sync](win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_test[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_test, win_test](win: $crate::mpi_sys::MPI_Win, flag: *mut ::std::os::raw::c_int) -> ::std::os::raw::c_int;
            fn E_Win_unlock[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_unlock, win_unlock](rank: ::std::os::raw::c_int, win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_unlock_all[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_unlock_all, win_unlock_all](win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Win_wait[$crate::qmpi_sys::_MPI_funcs::_MPI_Win_wait, win_wait](win: $crate::mpi_sys::MPI_Win) -> ::std::os::raw::c_int;
            fn E_Wtick[$crate::qmpi_sys::_MPI_funcs::_MPI_Wtick, wtick]() -> ::std::os::raw::c_double;
            fn E_Wtime[$crate::qmpi_sys::_MPI_funcs::_MPI_Wtime, wtime]() -> ::std::os::raw::c_double;
        }
    );
}
